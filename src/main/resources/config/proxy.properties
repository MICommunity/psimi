# HTTP proxy settings
#
# Allows to set the proxy setting a the runtime.
# When calling HttpProxyManager.setup() in your application, it does the equivalent of:
#      java -DproxySet=true -DproxyHost=<proxyHost> -DproxyPort=<proxyPort> <className>
#      where:
#             <proxyHost> is the content of the property proxy.host
#             <proxyPort> is the content of the property proxy.port

# true|false - unable or disable the use of the proxy setting (default=false)
proxy.enable=false

# hostname and port of the HTTP proxy
proxy.host=
proxy.port=



# In case you are using NTLM authentication, please read the following part:
#
# NTLM authentication is supported on Windows platforms only (due to licensing restrictions).
# Similar to other HTTP authentication schemes, NTLM uses the java.net.Authenticator class to
# acquire usernames and passwords when they are needed. However, NTLM also needs the NT domain name.
# There are three options for specifying the domain:
#
#   1. Do not specify it. In some environments, the domain is not actually required and the
#      application need not specify it.
#   2. The domain name can be encoded within the username by prefixing the domain name
#      followed by a back-slash '\' before the username. With this method, existing
#      applications that use the Authenticator class do not need to be modified,
#      so long as users are made aware that this notation must be used.
#   3. If a domain name is not specified as in method 2) and the system property
#      "http.auth.ntlm.domain" is defined, then the value of this property will
#      be used as the domain name.
#
# Copied from: http://java.sun.com/j2se/1.4.2/docs/guide/net/properties.html
# This is supported if you are using JDK 1.4.2 and later version.