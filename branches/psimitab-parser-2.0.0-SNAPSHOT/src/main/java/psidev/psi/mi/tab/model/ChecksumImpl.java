package psidev.psi.mi.tab.model;

import psidev.psi.mi.jami.model.CvTerm;
import psidev.psi.mi.jami.model.impl.DefaultCvTerm;

/**
 * Created with IntelliJ IDEA.
 * User: ntoro
 * Date: 13/06/2012
 * Time: 11:58
 * To change this template use File | Settings | File Templates.
 */
public class ChecksumImpl implements Checksum, psidev.psi.mi.jami.model.Checksum {

    /**
     * Generated with IntelliJ plugin generateSerialVersionUID.
     * To keep things consistent, please use the same thing.
     */
    private static final long serialVersionUID = -6688437635259747647L;

    private CvTerm method;
    private String value;

    //////////////////////
    // Constructors

    /**
     * Create a new ChecksumImpl object.
     *
     * @param methodName String with the PSI-MI name of the CVTerm
     * @param checksum String with the value generated by the method
     */
    public ChecksumImpl(String methodName, String checksum) {
        if ( methodName == null ) {
            throw new IllegalArgumentException( "Method name cannot be null." );
        }
        this.method = new DefaultCvTerm(methodName);
        if ( checksum == null ) {
            throw new IllegalArgumentException( "Checksum cannot be null." );
        }
        this.value = checksum;
    }

    /**
     * {@inheritDoc}
     */
    public String getMethodName() {
        return this.method.getShortName();
    }

    /**
     * {@inheritDoc}
     */
    public void setMethodName(String methodName) {
        if ( methodName == null ) {
            throw new IllegalArgumentException( "Method name cannot be null." );
        }

        this.method = new DefaultCvTerm(methodName);
    }
    /**
     * {@inheritDoc}
     */
    public String getChecksum() {
        return this.value;
    }

    /**
     * {@inheritDoc}
     */
    public void setChecksum(String checksum) {
        if ( checksum == null ) {
            throw new IllegalArgumentException( "Checksum cannot be null." );
        }

        this.value = checksum;
    }

    ///////////////////////////////
    // Object's override

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        sb.append( "Checksum=" );
        sb.append( "{methodName='" ).append( getMethodName() ).append( '\'' );
        sb.append( ", checksum='" ).append( this.value ).append( '\'' );
        sb.append( '}' );
        return sb.toString();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public boolean equals( Object o ) {
        if ( this == o ) {
            return true;
        }
        if ( o == null || getClass() != o.getClass() ) {
            return false;
        }

        final ChecksumImpl that = ( ChecksumImpl ) o;

        if ( !getMethodName().equals( that.getMethodName() ) ) {
            return false;
        }
        if ( value != null ? !value.equals( that.value) : that.value != null ) {
            return false;
        }

        return true;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public int hashCode() {
        int result;
        result = ( value != null ? value.hashCode() : 0 );
        result = 29 * result + getMethodName().hashCode();
        return result;
    }


    public CvTerm getMethod() {
        return this.method;
    }

    public String getValue() {
        return this.value;
    }
}
