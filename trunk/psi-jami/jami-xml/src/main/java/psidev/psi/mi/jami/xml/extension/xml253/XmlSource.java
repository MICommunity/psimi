//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.03 at 12:49:45 PM BST 
//


package psidev.psi.mi.jami.xml.extension.xml253;

import com.sun.xml.bind.annotation.XmlLocation;
import org.xml.sax.Locator;
import psidev.psi.mi.jami.datasource.FileSourceLocator;
import psidev.psi.mi.jami.model.Publication;
import psidev.psi.mi.jami.model.Xref;
import psidev.psi.mi.jami.xml.extension.*;

import javax.xml.bind.annotation.*;
import javax.xml.datatype.XMLGregorianCalendar;


/**
 * Desciption of the source of the entry, usually an organisation
 *             
 * 
 * <p>Java class for source complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * The JAXB binding is designed to be read-only and is not designed for writing
 * 
 */
@XmlRootElement(name = "source", namespace = "net:sf:psidev:mi")
@XmlAccessorType(XmlAccessType.NONE)
public class XmlSource extends AbstractXmlSource
{
    @XmlLocation
    @XmlTransient
    private Locator locator;

    public XmlSource(){
        super();
    }

    public XmlSource(String shortName) {
        super(shortName);
    }

    public XmlSource(String shortName, Xref ontologyId) {
        super(shortName, ontologyId);
    }

    public XmlSource(String shortName, String fullName, Xref ontologyId) {
        super(shortName, fullName, ontologyId);
    }

    public XmlSource(String shortName, String url, String address, Publication bibRef) {
        super(shortName,url, address, bibRef);
    }

    public XmlSource(String shortName, Xref ontologyId, String url, String address, Publication bibRef) {
        super(shortName, ontologyId, url, address, bibRef);
    }

    public XmlSource(String shortName, String fullName, Xref ontologyId, String url, String address, Publication bibRef) {
        super(shortName, fullName, ontologyId, url, address, bibRef);
    }

    public XmlSource(String shortName, String miId) {
        super(shortName, miId);
    }

    public XmlSource(String shortName, String fullName, String miId) {
        super(shortName, fullName, miId);
    }

    public XmlSource(String shortName, String miId, String url, String address, Publication bibRef) {
        super(shortName, miId, url, address, bibRef);
    }

    public XmlSource(String shortName, String fullName, String miId, String url, String address, Publication bibRef) {
        super(shortName, fullName, miId, url, address, bibRef);
    }

    /**
     * Sets the value of the names property.
     *
     * @param value
     *     allowed object is
     *     {@link psidev.psi.mi.jami.xml.extension.NamesContainer }
     *
     */
    @XmlElement(name = "names", required = true)
    @Override
    public void setJAXBNames(NamesContainer value) {
        super.setJAXBNames(value);
    }

    /**
     * Sets the value of the xrefContainer property.
     *
     * @param value
     *     allowed object is
     *     {@link psidev.psi.mi.jami.xml.extension.XrefContainer }
     *
     */
    @XmlElement(name = "xref", required = true)
    @Override
    public void setJAXBXref(CvTermXrefContainer value) {
        super.setJAXBXref(value);
    }

    @XmlElement(name = "bibRef", type = BibRef.class)
    public void setJAXBBibRef(BibRef ref) {
        super.setJAXBBibRef(ref);
    }

    @XmlAttribute(name = "release")
    public void setJAXBRelease(String value) {
        super.setJAXBRelease(value);
    }

    @XmlAttribute(name = "releaseDate")
    @XmlSchemaType(name = "date")
    public void setJAXBReleaseDate(XMLGregorianCalendar value) {
        super.setReleaseDate(value);
    }

    @XmlElement(name="attributeList")
    public void setJAXBAttributeWrapper(JAXBAttributeWrapper wrapper){
        super.setAttributeWrapper(wrapper);
    }

    @Override
    public FileSourceLocator getSourceLocator() {
        if (super.getSourceLocator() == null && locator != null){
            super.setSourceLocator(new PsiXmLocator(locator.getLineNumber(), locator.getColumnNumber(), null));
        }
        return super.getSourceLocator();
    }

    @Override
    public void setSourceLocator(FileSourceLocator sourceLocator) {
        if (sourceLocator == null){
            super.setSourceLocator(null);
        }
        else{
            super.setSourceLocator(new PsiXmLocator(sourceLocator.getLineNumber(), sourceLocator.getCharNumber(), null));
        }
    }
}
