<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

    <context:component-scan base-package="psidev.psi.mi.enricher" />

    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath*:/enricher.properties"/>
    </bean>-->

    <!-- Initialize the datasource -->
    <bean id="dataSourceInitializer" class="psidev.psi.mi.enricher.batch.BatchDataSourceInitializer">
        <property name="dataSource" ref="batchDataSource"/>
        <property name="initScripts" value="classpath*:/org/springframework/batch/core/schema-h2.sql"/>
    </bean>

    <bean id="batchDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:file:target/enricherbatch"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!-- Standard job config -->
    <bean id="batchTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          lazy-init="true">
        <property name="dataSource" ref="batchDataSource"/>
    </bean>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="batchDataSource" p:transactionManager-ref="batchTransactionManager" />

    <bean id="batchJobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
        <property name="taskExecutor" ref="syncTaskExecutor" />
    </bean>

    <bean id="syncTaskExecutor" class="org.springframework.core.task.SyncTaskExecutor"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="batchDataSource" />

    <bean id="enricherJobRegistry" class="psidev.psi.mi.enricher.batch.PsiEnricherJobRegistry"/>

    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
        <property name="jobExplorer" ref="jobExplorer"/>
        <property name="jobRepository" ref="jobRepository" />
        <property name="jobRegistry" ref="enricherJobRegistry" />
        <property name="jobLauncher" ref="batchJobLauncher" />
    </bean>

    <!-- reader -->
    <bean id="miFileResource" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg value="${interaction.file}"/>
    </bean>
    <bean id="interactionEvidenceReader" class="psidev.psi.mi.enricher.batch.reader.PsiInteractionEvidenceReader">
        <property name="resource" ref="miFileResource"/>
    </bean>

    <!-- lsiteners -->
    <bean id="cvTermListener" class="psidev.psi.mi.jami.enricher.impl.cvterm.listener.CvTermEnricherStatisticsWriter">
        <constructor-arg index="0" value="${cvTerm.sucess.logFile}"/>
        <constructor-arg index="1" value="${cvTerm.failure.logFile}"/>
    </bean>
    <bean id="proteinListener" class="psidev.psi.mi.jami.enricher.impl.protein.listener.ProteinEnricherStatisticsWriter">
        <constructor-arg index="0" value="${protein.sucess.logFile}"/>
        <constructor-arg index="1" value="${protein.failure.logFile}"/>
    </bean>
    <bean id="organismListener" class="psidev.psi.mi.jami.enricher.impl.organism.listener.OrganismEnricherStatisticsWriter">
        <constructor-arg index="0" value="${organism.sucess.logFile}"/>
        <constructor-arg index="1" value="${organism.failure.logFile}"/>
    </bean>
    <!--<bean id="proteinRemapperListener" class="ProteinRe"/>-->
    <bean id="featureListener" class="psidev.psi.mi.jami.enricher.impl.feature.listener.FeatureEnricherStatisticsWriter">
        <constructor-arg index="0" value="${feature.sucess.logFile}"/>
        <constructor-arg index="1" value="${feature.failure.logFile}"/>
    </bean>

    <!-- remapper -->
    <bean id="proteinRemapper" class="psidev.psi.mi.jami.bridges.uniprot.remapping.UniprotProteinRemapper">
        <property name="checkingEnabled" value="true"/>
        <property name="priorityIdentifiers" value="false"/>
        <property name="prioritySequence" value="true"/>
        <!--<property name="remapListener" ref="proteinRemapperListener"/> -->
     </bean>

    <!-- fetchers -->
    <bean id="cvTermFetcher" class="psidev.psi.mi.jami.bridges.ols.OlsFetcher"/>
    <bean id="proteinFetcher" class="psidev.psi.mi.jami.bridges.uniprot.CachedUniprotFetcher"/>

    <!-- enrichers -->
    <bean id="cvTermEnricher" class=""/>
    <bean id="proteinEnricher" class="psidev.psi.mi.jami.bridges.uniprot.CachedUniprotFetcher"/>
    <bean id="" class="psidev.psi.mi.jami.bridges.ols.OlsFetcher"/>
    <bean id="proteinEnricher" class="psidev.psi.mi.jami.bridges.uniprot.CachedUniprotFetcher"/>

    <!-- processor -->
    <bean id="interactionEvidenceProcessor" class="psidev.psi.mi.enricher.batch.processor.InteractionEvidenceEnricherProcessor">
        <property name="interactionEnricher" ref="interactionEnricher"/>
    </bean>

   <!-- interaction writer -->
    <bean id="interactionEvidenceWriter" class="psidev.psi.mi.enricher.batch.writer.PsiInteractionEvidenceWriter">
        <property name="writerOptions">
            <map>
                <entry key="Key 1" value="zeroPoint" />
                <entry key="Key 2" value-ref="point2" />
                <entry key="Key 3">
                    <bean class="com.example4.Point">
                        <property name="x" value="0" />
                        <property name="y" value="0" />
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

</beans>